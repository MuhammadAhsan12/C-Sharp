<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bJ4n7KVQhMEJJeAQhCQ4IQhIQIQhIQIQhIR//9k=
</value>
  </data>
</root>